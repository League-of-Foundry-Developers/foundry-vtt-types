---
name: Checks

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
  pull_request_target:
    types:
      - opened
      - synchronize
  merge_group:

env:
  node_version: 23

jobs:
  typecheck:
    # Can run untrusted code so disable all permissions.
    permissions: {}
    name: Type Check Code Base
    runs-on: ubuntu-latest
    steps:
      # This pattern is reused a couple of times.
      # It's so verbose because of `pull_request_target`.
      # For security reasons by deafult it won't check out the branch the PR is coming from.
      - name: Checkout Branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - run: npm ci --cache .npm --prefer-offline

      - name: Type Check
        run: npm run typecheck

  lint:
    # Can run untrusted code so disable all permissions.
    permissions: {}
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - run: npm ci --cache .npm --prefer-offline

      - name: Run Lints
        run: npm run lint:ci

  test:
    # Can run untrusted code so disable all permissions.
    permissions: {}
    name: Test Code Base
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - run: npm ci --cache .npm --prefer-offline

      - name: Execute Tests
        run: npm test -- --run --reporter github-actions --reporter=./.github/workflows/testsReporter.ts

      - name: Upload Main Test Results
        if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: main-test-results
          path: test-results/vitest-report.json

      - name: Upload Test Results
        if: always() && github.event_name == 'pull_request_target' && github.head_ref != 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: pr-test-results
          path: test-results/vitest-report.json

  checkCanMergeToMaintenance:
    # Can run untrusted code so disable all permissions.
    permissions: {}
    name: Check Merge to Maintenance
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: Get fetch depth
        id: fetch_depth
        env:
          GITHUB_EVENT_COMMITS: ${{ toJSON(github.event.commits) }}
        run: |
          commitCount=$(jq length <<< "$GITHUB_EVENT_COMMITS")
          echo "fetch_depth=$(( commitCount + 1 ))" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
          fetch-depth: ${{ steps.fetch_depth.outputs.fetch_depth }}

      - name: Fetch maintenance branch
        run: |
          git log --oneline

          git fetch --no-tags origin main maintenance:maintenance

      - name: Checkout maintenance branch
        run: git checkout maintenance

      - name: Check for merge conflicts
        run: |
          BASE_COMMIT=$(git merge-base origin/main "${{ github.sha }}")

          git cherry-pick --no-commit "$BASE_COMMIT"^.."${{ github.sha }}" || (
            echo "Merge conflicts detected with the maintenance branch!" && exit 1
          )

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - run: npm ci --cache .npm --prefer-offline

      - name: Run Lints on maintenance
        run: npm run lint:ci

      - name: Type Check maintenance
        run: npm run typecheck

  mergeToMaintenance:
    name: Merge To Maintenance
    needs: [checkCanMergeToMaintenance]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: 8BitJonny/gh-get-current-pr@3.0.0
        id: PR

      - name: Check if Breaking Change
        id: should_skip
        # Help skip the rest of the current job if this change wasn't made through a PR or if the PR is labeled as breaking.
        if: steps.PR.outputs.pr_found != 'true' || contains(steps.PR.outputs.pr_labels.*.name, 'breaking')
        run: |
          echo "Skipping the rest of the job because this change wasn't made through a PR or the PR is labeled as breaking."
          echo "should_skip=true" >> "$GITHUB_OUTPUT"

      - name: Get fetch depth
        if: steps.should_skip.outputs.should_skip != 'true'
        id: fetch_depth
        env:
          GITHUB_EVENT_COMMITS: ${{ toJSON(github.event.commits) }}
        run: |
          commitCount=$(jq length <<< "$GITHUB_EVENT_COMMITS")
          echo "fetch_depth=$(( commitCount + 1 ))" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
        if: steps.should_skip.outputs.should_skip != 'true'
        with:
          fetch-depth: ${{ steps.fetch_depth.outputs.fetch_depth }}

      - name: Fetch branches
        if: steps.should_skip.outputs.should_skip != 'true'
        run: |
          git fetch origin maintenance:maintenance

      - name: Cherry pick commits onto maintenance
        if: steps.should_skip.outputs.should_skip != 'true'
        run: |
          git checkout maintenance

          # Pick the freshly added commits onto the maintenance branch.
          git cherry-pick "${{ github.event.before }}"^.."${{ github.event.after }}" || (
            echo "Merge conflicts detected with maintenance branch! This should be impossible if checkCanMergeToMaintenance is written correctly!" && exit 1
          )

      - name: Push changes
        if: steps.should_skip.outputs.should_skip != 'true'
        uses: ad-m/github-push-action@master
        with:
          branch: maintenance
          github_token: ${{ secrets.GITHUB_TOKEN }}

  reportTestResults:
    name: Report Test Results
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' || (github.event_name == 'push' && github.event.pull_request != null)
    steps:
      # This must check out main.
      # If it didn't someone could edit `postOrUpdateTestsReport.js` to easily run arbitrary code.
      - uses: actions/checkout@v4
        with:
          ref: refs/heads/main
          fetch-depth: 1

      - name: Download Main Test Results
        uses: dawidd6/action-download-artifact@v7
        with:
          branch: main
          name: main-test-results
          path: main-test-results

      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          name: pr-test-results
          path: pr-test-results

      - name: Post or Update Report
        uses: actions/github-script@v7
        with:
          script: |
            const { default: postOrUpdateTestsReport } = await import("/home/runner/work/foundry-vtt-types/foundry-vtt-types/.github/workflows/postOrUpdateTestsReport.js");
            await postOrUpdateTestsReport({ github, context, core });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
